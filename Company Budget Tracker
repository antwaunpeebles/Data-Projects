import pandas as pd

# Step 1: Create a class for the budget tracker
class BudgetTracker:
    def __init__(self):
        # Initialize empty DataFrame for categories
        self.income_data = pd.DataFrame(columns=['Source', 'Amount'])
        self.expenses_data = pd.DataFrame(columns=['Category', 'Amount'])
        self.budget_data = pd.DataFrame(columns=['Category', 'Allocated Amount'])

    # Step 2: Add income entry
    def add_income(self, source, amount):
        self.income_data = self.income_data.append({'Source': source, 'Amount': amount}, ignore_index=True)

    # Step 3: Add expense entry
    def add_expense(self, category, amount):
        self.expenses_data = self.expenses_data.append({'Category': category, 'Amount': amount}, ignore_index=True)

    # Step 4: Add budget allocation
    def allocate_budget(self, category, amount):
        self.budget_data = self.budget_data.append({'Category': category, 'Allocated Amount': amount}, ignore_index=True)

    # Step 5: Calculate total income, expenses, and remaining budget
    def calculate_totals(self):
        total_income = self.income_data['Amount'].sum()
        total_expenses = self.expenses_data['Amount'].sum()
        total_allocated_budget = self.budget_data['Allocated Amount'].sum()
        remaining_budget = total_allocated_budget - total_expenses

        print("\nTotal Income: $", total_income)
        print("Total Expenses: $", total_expenses)
        print("Total Allocated Budget: $", total_allocated_budget)
        print("Remaining Budget: $", remaining_budget)

    # Step 6: Save budget data to Excel
    def save_to_excel(self, file_name="company_budget.xlsx"):
        with pd.ExcelWriter(file_name, engine='openpyxl') as writer:
            self.income_data.to_excel(writer, sheet_name="Income", index=False)
            self.expenses_data.to_excel(writer, sheet_name="Expenses", index=False)
            self.budget_data.to_excel(writer, sheet_name="Budget Allocations", index=False)
            writer.save()
        print(f"Budget data has been saved to {file_name}.")

# Step 7: Example usage
if __name__ == "__main__":
    budget_tracker = BudgetTracker()

    # Adding income data
    budget_tracker.add_income("Product Sales", 100000)
    budget_tracker.add_income("Consulting", 30000)

    # Adding expense data
    budget_tracker.add_expense("Salaries", 40000)
    budget_tracker.add_expense("Marketing", 15000)
    budget_tracker.add_expense("Utilities", 5000)

    # Allocating budget
    budget_tracker.allocate_budget("Salaries", 45000)
    budget_tracker.allocate_budget("Marketing", 20000)
    budget_tracker.allocate_budget("R&D", 15000)

    # Calculate totals
    budget_tracker.calculate_totals()

    # Save data to Excel
    budget_tracker.save_to_excel("company_budget.xlsx")
